@startuml

class HurricaneData {
    - hurricanes: ArrayList<Hurricane>
    + readInputFile(filename: String): void
    + sortByStormName(order: String): void
    + sortByStormCategory(order: String): void
    + sortByStormYear(order: String): void
    + sortByStormMonth(order: String): void
    + calculateAverageCategory(): double
    + calculateMostActiveYear(): int
    + aggregateTotalByCategory(): Map<Integer, Integer>
    + aggregateTotalByYear(): Map<Integer, Integer>
}

class Hurricane {
    - name: String
    - category: int
    - date: LocalDate
    + Hurricane(name: String, category: int, date: LocalDate)
    + getName(): String
    + getCategory(): int
    + getDate(): LocalDate
}

class MenuOption1 {
    + execute(hurricaneData: HurricaneData, sortOrder: String): void
}

class MenuOption2 {
    + execute(hurricaneData: HurricaneData, sortOrder: String): void
}

class MenuOption3 {
    + execute(hurricaneData: HurricaneData, sortOrder: String): void
}

class MenuOption4 {
    + execute(hurricaneData: HurricaneData, sortOrder: String): void
}

class MenuOption5 {
    + execute(hurricaneData: HurricaneData): void
}

class MenuOption6 {
    + execute(hurricaneData: HurricaneData): void
}

class MenuOption7 {
    + execute(hurricaneData: HurricaneData): void
}

class MenuOption8 {
    + execute(hurricaneData: HurricaneData): void
}

class OutputWriter {
    + writeToFile(filename: String, data: String): void
}

class Main {
    + main(args: String[]): void
}

HurricaneData --> Hurricane
HurricaneData --> OutputWriter

MenuOption1 --> HurricaneData
MenuOption2 --> HurricaneData
MenuOption3 --> HurricaneData
MenuOption4 --> HurricaneData
MenuOption5 --> HurricaneData
MenuOption6 --> HurricaneData
MenuOption7 --> HurricaneData
MenuOption8 --> HurricaneData

Main --> HurricaneData

@enduml